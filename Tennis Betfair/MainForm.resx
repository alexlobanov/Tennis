<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQ
        AAASCwAAEgsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAJAAAAEQAAABUAAAAWAAAAFgAAABYAAAAWAAAAFQAAABEAAAAJAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAYAAAAQAAAAGwAAACkAAAA4AAAAQQAAAEMAAABDAAAAQwAAAEMAAABBAAAAOAAAACkAAAAbAAAAEAAA
        AAYAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAANAAAAIAAAADUAFQtMAGo0mQCKRN4Ak0j/AJNI/wCTSP8Ak0f/AJNH/wCTR/8AiUPeAGozmQAV
        C0wAAAA1AAAAIAAAAA0AAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAFAAAAFgAAAC4AMhlaAItE3wCUSf8AlUr/AJZK/wCXTP8Al0z/AJdK/wCWSf8Alkj/AJVH/wCU
        R/8AlEj/AJNH/wCKQ98AMhhaAAAALgAAABYAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABQAAABkAAAA4AHs9tACWS/8AmE7/AJxR/wCdVP8AoFb/AKBU/wChU/8dq23/Y7uT/3S+
        nP90vZ3/QLF+/w2iXv8AmEn/AJZI/wCVSP8Aezy0AAAAOAAAABkAAAAFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAUAAAAZAAAAOgCRSe0AmU//AJ5W/wCjWv8Apl3/AKhf/wCoXP9QvJD/3dja///g
        7f/d2dr/utPJ/7rTyP/v3eX//+Hu/8vV0P9Rton/AJpM/wCXSv8AkEjtAAAAOgAAABkAAAAFAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAFgAAADgAkknrAJ5T/wCkXP8AqWL/AK1l/wCvZv8As2z/u9TL///g
        7f+W0Lv/Crp6/wC1a/8Atmv/ALVq/wCyZv8cuHz/ls+5///i7/+70sn/C6hl/wCbTv8AkUjrAAAAOAAA
        ABYAAAADAAAAAAAAAAAAAAAAAAAAAQAAAA0AAAAuAJRL7ACfVv8AqGH/AK5n/wCybf8AtW//ALp0/8/a
        1//y4Ob/GsSJ/wDAd/8AwXz/AMN+/wDCfv8AwXz/AL56/wC7df8At27/Lb+J/9/e3//y4uj/HbFz/wCe
        Uv8Ak0rsAAAALgAAAA0AAAABAAAAAAAAAAAAAAAGAAAAHwCBQrAAn1X/AK1m/wCxbP8At3L/ALp0/wC/
        e//R3tn/9eLo/xzLkf8Ax4P/AMuH/wDLiv8Ay4r/AMuL/wDKiP8AyIf/AMaE/wDCf/8Avnf/ALt0/9De
        2f/25ev/DLFu/wCdUf8AgUKwAAAAHwAAAAYAAAAAAAAAAAAAABAAOx9MAJxR/wCuaP8AtG//ALp2/wC/
        ev8Awnr/nNrF//bl6/8bz5f/AM6K/wDQj/8A0ZH/AdKS/wHSkv8A0ZH/ANCS/wDRj/8Azo3/AMuK/wDI
        hv8Aw33/AL96/+Xj4//C29L/AKxf/wCbT/8AOx9MAAAAEAAAAAAAAAADAAAAGwCUTd0AqmP/ALdy/wC8
        eP8Awn7/AMaA/0LTpP//6fX/Ztq3/wDRjf8A1JT/AdSW/wPVl/8D1Zf/A9aX/wPVl/8D1Zb/AtSV/wHT
        lP8B0ZL/AM+P/wDMiv8AxoH/LsqV///s+P9Wyp//AKlf/wCUTN0AAAAbAAAAAwAAAAkAIxMyAKBV/wC3
        c/8AvXn/AMOB/wDJhf8AzYv//erw/7Lj1P8A0o7/ANaW/wPXmv8F2Jv/Bdmc/wbZnf8G2Z3/Btmc/wXY
        nP8F15r/BNaZ/wPVl/8C05X/AdGS/wDOjP8Ax4H/oN3J/9rm4v8Atm3/AJ9T/wAjEzIAAAAJAAAAEQB7
        Qo0Aq2P/AL57/wDEgf8Ayof/AM6I/47hx///7fL/ENed/wDYmP8F2Z3/B9qf/wfboP8I3KH/CNyi/wjc
        ov8I3KL/CNuh/wfbn/8G2p7/Bdic/wTWmf8D1Zb/ANKT/wDPjf8ez5f///L+/w7Dg/8AqmH/AHtCjQAA
        ABEAAAAVAJhR2gC1b/8AxIH/AMmI/wDPjP8f1p////L9/2zhwP8A15j/BNuf/wjcov8J3qT/Ct+l/wrf
        pv8L4Kf/C+Cn/wrfpv8K36b/Cd6k/wndo/8H26D/Btqe/wXYm/8D1Zj/ANOS/wDNh///8fj/R9Gj/wC1
        bv8AmFHaAAAAFQAAABYAolj/AMJ//wDJiP8Azoz/ANCL/8zs4v/h7ur/ANiW/wLcn/8I3qT/C9+n/wvh
        qP8M4qr/DeKr/w3jrP8N46z/DeKr/wziqv8M4an/C+Cn/wrepf8I3KL/B9qf/wXYnP8A1pf/ANGM/87s
        4/+D38H/AMF8/wCiVv8AAAAWAAAAFgCkWf8AyYf/AM6M/wDRjf9a37f///f//znfsf8A257/CN+k/wvh
        qP8N4qv/DuSt/w7krv8P5a//D+aw/w/msP8P5bD/DuWv/w7krf8N46v/DOGp/wrfpv8J3aP/B9ug/wLY
        m/8A0pH/0e/m/4PjxP8AyYT/AKNY/wAAABYAAAAWAKZa/wDNjP8A0I3/Dtab///4/v+Y6tP/ANqc/wbf
        pf8M4an/DeOs/w7lr/8P5rH/EOey/xHos/8R6LT/Eei0/xHotP8Q57P/EOax/w/lr/8O5K3/DOKq/wvf
        p/8J3aP/A9qd/wDVk//n8/H/cePA/wDOiv8ApFr/AAAAFgAAABYAplz/ANCO/wDPi//S8ef/+/f4/wTa
        oP8D36L/C+Gp/w3jrP8P5a//EOey/xHotP8S6bb/Euq3/xPrt/8T67f/Euq3/xLqtv8R6bX/EOez/w/m
        sP8O5K3/DOKq/wnfpv8A25//E9uj///8//8k2aT/ANGQ/wCmW/8AAAAWAAAAFQCnXP8A0Yz/q+za///9
        //8m3qr/ANug/wngp/8N46z/D+Wv/xDnsv8S6bX/E+q3/xPruP8S67n/Eey5/xHsuf8S7Ln/Euu4/xTq
        t/8S6bb/Eeiz/w/msP8O5K3/COGo/wDcn/+F6s///fj5/wDTkP8A1JX/AKhd/wAAABUAAAARAKhb/6Dr
        1f//////XuS//wDam/8H36X/DOKq/w7lrv8Q57L/Eem1/xPqt/8S67j/EOy5/w/tuv8O7br/Du26/w/t
        uv8Q7Ln/Eey5/xPruP8S6bb/EOez/wzlrv8B4qf/KeKx///8//9g5L//ANaW/wDUlf8AqV//AAAAEQAA
        AAkApFvWktm7/2Xmwv8A2Jj/BNyh/wrgqP8N46z/D+aw/xHotP8S6rf/Euu4/xDsuf8O7br/DO67/wvu
        u/8L7rz/DO67/w3tu/8P7Lr/Eey5/xPqt/8O6bT/BeWu/wbjq//99/j/1vTr/wDZmP8A2Jr/AsqJ/wCl
        XtYAAAAJAAAAAwCaWHwAv3n/ANia/wPbnv8I3qT/DOGp/w7krf8Q57L/Eum1/xPruP8R7Ln/Du26/wvu
        u/8J77z/CO+9/wjvvf8J77z/C+68/w3tu/8P7Ln/Deu3/wTpsv8v6bz/6Pbz/+r28v8G3qX/ANuf/wTa
        n/8CwHz/AJlYfAAAAAMAAAAAAEssGgCzaf8E3J//B9yh/wrfpf8M4qr/DuWv/xDns/8S6rb/Euu4/w/s
        uv8M7bv/Ce+8/wfwvf8F8L7/BfC+/wbwvf8I77z/Ce66/wftuP8A67T/VO/J///6///q9vP/B+Kq/wHe
        o/8G3aP/Bt2h/wCzaP8ASywaAAAAAAAAAAAAAAAGAK5m1gPNjf8I3qT/Ct+n/wziq/8P5a//Eeiz/xLq
        tv8S7Ln/D+26/wzuu/8J773/BfC+/wLxv/8B8b//A/C+/wLvu/8A7bn/Bu24/8T16f//+///sfPj/wzm
        r/8E4qn/CeCn/wjepf8EzY7/AK5m1gAAAAYAAAAAAAAAAAAAAAEAgEwpALdt/wfdo/8K4Kj/DOKq/w/l
        r/8R6LP/Euq2/xLsuf8P7br/DO67/wnvvP8G8L7/AfG//wDxvv8A8Lv/AO63/3Ty1///+f7///n+/1Tv
        yf8A56//COau/wvjrP8L4qn/Cd2k/wC3bf8AgEwpAAAAAQAAAAAAAAAAAAAAAAAAAAMArWicA8N+/wvh
        qf8M46z/DuWu/xDnsv8S6rb/Euu4/xDsuf8N7bv/Cu68/wTvvf8A8Lz/AO+5/zryyf/o+PT///r//530
        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
</value>
  </data>
</root>